class Node(object):
    def __init__(self, val, next=None, random=None):
        self.val = val
        self.next = next
        self.random = random
class Solution(object):
    def copyRandomList(self, head):
        if not head:
            return None
        old_to_new = {}
        current = head
        while current:
            copy = Node(current.val)
            old_to_new[current] = copy
            current = current.next
        current = head
        while current:
            copy = old_to_new[current]
            copy.next = old_to_new.get(current.next)
            copy.random = old_to_new.get(current.random)
            current = current.next
        return old_to_new[head]